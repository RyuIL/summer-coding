{"version":3,"sources":["store/modules/todo.js","store/modules/notification.js","components/NotificationComponent/NotificationComponent.js","components/Todo/TodoItem.js","components/Todo/TodoGroup.js","container/TodoGroupContainer.js","components/TodoModal/CalendarModal2.js","components/PriorityDropdown/PriorityDropdown.js","components/Todo/TodosInput.js","components/TodoModal/TodosViewer.js","container/TodoViewerContainer.js","container/TodoContainer.js","components/Layout/Sidebar.js","components/Layout/Menubar.js","components/Layout/Footer.js","components/Layout/Layout.js","App.js","serviceWorker.js","store/modules/index.js","store/store.js","index.js"],"names":["changeInput","createAction","value","changeContent","insert","text","edit","toggle","id","remove","changeDate","date","todoModalOpen","todoEditModalOpen","todoModalClose","todoEditModalClose","todoOrderChange","initialState","Map","input","inputContent","Date","order","todoOpen","modalOpen","editModalOpen","todos","List","handleActions","_handleActions","Object","defineProperty","state","action","set","payload","_ref","item","checked","update","push","_ref2","index","get","findIndex","setIn","_ref3","updateIn","_ref4","deleteIn","_ref5","getIn","_ref6","_ref7","showNotification","data","title","type","React","Component","TodoItem","isOpen","handleOpen","_this","setState","handleClose","handleEditClose","props","onEditOpen","handleRemove","onRemove","message","addNotification","handleComplete","_this2","this","_this$props","onToggle","react_default","a","createElement","Popup","on","onOpen","open","onClose","flowing","position","content","Grid","centered","divided","columns","Column","textAlign","Button","Group","color","onClick","Or","trigger","Segment","label","raised","style","textDecoration","Label","size","as","ribbon","getMonth","getDate","font-size","TodosGroup","onEdit","onEditClose","map","todo","_todo$toJS","toJS","Todo_TodoItem","TodoGroupContainer","handleEdit","TodoActions","handleToggle","handleEditOpen","handleTodoClose","handleTodoOpen","TodoGroup","onTodoOpen","onTodoClose","connect","dispatch","bindActionCreators","todoActions","CalendarModal2","onChange","onChangeDate","entry_default","minDate","tagOptions","key","empty","circular","PriorityDropdown","handleClick","onOrderChange","Dropdown","icon","floating","labeled","button","className","margin-left","Menu","scrolling","option","Item","assign","TodosInput","onChangeContent","Form","Input","fluid","placeholder","name","TextArea","defaultProps","TodosViewer","handleSubmit","onInsert","onModalClose","onModalOpen","Modal","dimmer","closeIcon","margin-top","Header","Content","image","Description","Todo_TodosInput","Divider","TodoModal_CalendarModal2","components_PriorityDropdown_PriorityDropdown","Actions","positive","labelPosition","TodoViewerContainer","handleChange","e","target","handleChangeContent","handleInsert","handleModalOpen","handleModalClose","handleChangeDate","handleOrderChange","_this$props2","TodoModal_TodosViewer","TodosContainer","Container","container_TodoGroupContainer","container_TodoViewerContainer","notification","SidebarExampleDimmed","visible","handleHideClick","handleShowClick","handleSidebarHide","children","Sidebar","Pushable","animation","inverted","onHide","vertical","width","Pusher","dimmed","basic","Menubar","activeItem","handleItemClick","_this$state","Sidebar_SidebarExampleDimmed","handleVisible","secondary","active","Footer","margin","padding","stackable","section","horizontal","link","href","Layout","todolist","Menubar_Menubar","height","Layout_Footer","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleShowNotification","NotificationActions","bind","assertThisInitialized","notificationDOMRef","createRef","current","container","animationIn","animationOut","dismiss","duration","dismissable","click","components_Layout_Layout","react_notifications_component_default","ref","TodoContainer","notificationActions","Boolean","window","location","hostname","match","combineReducers","pender","penderReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","logger","penderMiddleware","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0e7728d5.chunk.js","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\nimport { Map, List } from 'immutable';\n\nconst CHANGE_INPUT = 'todo/CHANGE_INPUT';\nconst CHANGE_CONTENT = 'todo/CHANGE_CONTENT';\nconst INSERT = 'todo/INSERT';\nconst EDIT = 'todo/EDIT';\nconst TOGGLE = 'todo/TOGGLE';\nconst REMOVE = 'todo/REMOVE';\nconst CHANGE_DATE = 'todo/CANGE_DATE';\nconst TODO_MODAL_OPEN = 'todo/TODO_MODAL_OPEN';\nconst TODO_MODAL_ClOSE = 'todo/TODO_MODAL_CLOSE';\nconst TODO_EDIT_MODAL_OPEN = \"todo/TODO_EDIT_MODAL_OPEN\";\nconst TODO_EDIT_MODAL_CLOSE = \"todo/TODO_EDIT_MODAL_CLOSE\";\nconst TODO_ORDER_CHANGE = \"todo/TODO_ORDER_CHANGE\";\n\nexport const changeInput = createAction(CHANGE_INPUT, value => value);\nexport const changeContent = createAction(CHANGE_CONTENT, value => value);\nexport const insert = createAction(INSERT, text => text);\nexport const edit = createAction(EDIT);\nexport const toggle = createAction(TOGGLE, id => id);\nexport const remove = createAction(REMOVE, id => id);\nexport const changeDate = createAction(CHANGE_DATE, date=> date);\nexport const todoModalOpen = createAction(TODO_MODAL_OPEN);\nexport const todoEditModalOpen = createAction(TODO_EDIT_MODAL_OPEN, id => id);\nexport const todoModalClose = createAction(TODO_MODAL_ClOSE);\nexport const todoEditModalClose = createAction(TODO_EDIT_MODAL_CLOSE);\nexport const todoOrderChange = createAction(TODO_ORDER_CHANGE, value => value);\n\nlet id = 0;\n\nconst initialState = Map({\n  input: '',\n  inputContent : '',\n  date : new Date(),\n  order : '',\n  todoOpen : false,\n  modalOpen : false,\n  editModalOpen : false,\n  todos: List()\n});\n\nexport default handleActions({\n  [CHANGE_INPUT]: (state, action) => state.set('input', action.payload),\n  [CHANGE_CONTENT] : (state, action) => state.set('inputContent', action.payload),\n  [INSERT]: (state, { payload: text }) => {\n    const item = Map({ id: id++, checked: false, text }); \n    return state.update('todos', todos => todos.push(item));\n  },\n  [EDIT] : (state, {payload : id}) => {\n    const index = state.get('todos').findIndex(item => item.get('id') === id);\n    return state.setIn(['todos', index, 'text', 'input'], state.get('input'))\n                .setIn(['todos', index, 'text', 'inputContent'], state.get('inputContent'))\n                .setIn(['todos', index, 'text', 'date'], state.get('date'))\n                .setIn(['todos', index, 'text', 'order'], state.get('order'))\n  },\n  [TOGGLE]: (state, { payload: id }) => {\n    const index = state.get('todos').findIndex(item => item.get('id') === id);\n    return state.updateIn(['todos', index, 'checked'], checked => !checked);\n  },\n  [REMOVE]: (state, { payload: id }) => {\n    const index = state.get('todos').findIndex(item => item.get('id') === id);\n    return state.deleteIn(['todos', index]);\n  },\n  [TODO_MODAL_OPEN] : (state) => state.set('modalOpen', true)\n                                      .set('date', new Date()),\n  [TODO_MODAL_ClOSE] : (state) => state.set('modalOpen', false)\n                                       .set('editModalOpen', false),\n  [TODO_EDIT_MODAL_OPEN] : (state, {payload : id}) => {\n    const index = state.get('todos').findIndex(item => item.get('id') === id);\n    return state.set('input', state.getIn(['todos', index, 'text', 'input']))\n                .set('inputContent', state.getIn(['todos', index, 'text', 'inputContent']))\n                .set('date', state.getIn(['todos', index, 'text', 'date']))\n                .set('editModalOpen', true)\n                .set('order', state.getIn(['todos', index, 'text', 'order']))\n  },\n  [TODO_EDIT_MODAL_CLOSE] : (state) => {\n    return state.set('input', '')\n                .set('inputContent', '')\n                .set('date', new Date())\n                .set('editModalOpen', false)\n                .set('modalOpen', false)\n                .set('order', \"\");\n  },\n  [CHANGE_DATE] : (state, {payload : date}) => state.set('date', date),\n  [TODO_ORDER_CHANGE] : (state, {payload : value}) => state.set('order', value)\n}, initialState);","import { createAction, handleActions } from 'redux-actions';\nimport { Map } from 'immutable';\n\nconst SHOW_NOTIFICATION = 'todo/SHOW_NOTIFICATION';\n\nexport const showNotification = createAction(SHOW_NOTIFICATION, value => value);\n\nconst initialState = Map({\n  data : Map({\n      title : '',\n      type : '',\n  })\n});\n\nexport default handleActions({\n  [SHOW_NOTIFICATION]: (state, action) => state.set('data', action.payload),\n}, initialState);","import React from \"react\";\nimport ReactNotification from \"react-notifications-component\";\n \nclass NotificationComponent extends React.Component {\n \n  render() {\n    return (\n      <div className=\"app-content\">\n        <ReactNotification ref={this.notificationDOMRef} />\n        <button onClick={this.addNotification} className=\"btn btn-primary\">\n          Add Awesome Notification\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default NotificationComponent;","import React from 'react'\nimport { Button, Popup, Grid, Segment, Label} from 'semantic-ui-react';\n\nclass TodoItem extends React.Component{\n    state = {\n        isOpen : false\n    }\n    handleOpen = () => {\n        this.setState({ isOpen: true });\n    }\n\n    handleClose = () =>{    \n        this.setState({isOpen : false});\n    }\n\n    handleEditClose = () => {\n        this.setState({isOpen : false});\n        this.props.onEditOpen();\n    }\n    handleRemove = (id) => {\n        this.props.onRemove(id);\n        this.setState({isOpen : false});\n        const value = {type : \"warning\", message : this.props.text.input+\"작업 삭제 완료\", title : \"삭제\"}\n        this.props.addNotification(value);\n    }\n\n    handleComplete = (id) => {\n        this.props.onRemove(id);\n        this.setState({isOpen : false});\n        const value = {type : \"default\", message : this.props.text.input+\" 작업을 완료 했습니다.\", title : \"완료\"}\n        this.props.addNotification(value);\n    }\n    \n    render(){\n        const {\n            id, checked, text, onToggle, addNotification\n        } = this.props;\n        const {isOpen} = this.state;\n        return(\n            <Popup on='click' onOpen={this.handleOpen} open={isOpen} onClose={this.handleClose} flowing position=\"bottom right\"\n                content = {\n                <Grid centered divided columns={1}>\n                    <Grid.Column textAlign='center'>\n                    <Button.Group>\n                        <Button color='blue' onClick={()=>this.handleComplete(id)}>{checked ? <p>복원</p> : <p>완료</p>}</Button>\n                        <Button.Or />\n                        <Button color='orange' onClick={this.handleEditClose}>수정</Button>\n                        <Button.Or />\n                        <Button color='red' onClick={(id)=>this.handleRemove(id)} >삭제</Button>\n                    </Button.Group>   \n                    </Grid.Column>\n                </Grid>\n                }\n                trigger={<Segment color={text.order ? text.order.label.color : \"grey\"} textAlign='left' raised\n                style={{ textDecoration: checked ? \"line-through\" : \"none\" }}> \n                <Label size='medium' as='a' color={text.order ? text.order.label.color : \"grey\"} ribbon>\n                    {(text.date.getMonth()+1)+\".\"+text.date.getDate()}\n                </Label>\n                <span style={{'font-size': 'large'}}>\n                    {text.input}<br/>\n                </span>\n                {text.inputContent}\n                </Segment>\n            } />  \n        )\n    }\n}\n\nexport default TodoItem;","import React from 'react'\nimport TodoItem from './TodoItem';\n\nconst TodosGroup = ({ \n    todos, onToggle, onRemove, onEdit, onEditOpen,\n    onEditClose, addNotification\n}) => {\n\n  const todoItems = todos.map(todo => {\n    const {id, checked, text} = todo.toJS();\n    return(\n    <TodoItem\n      id={id} \n      checked={checked}\n      text={text}\n      onRemove={onRemove}\n      onToggle={onToggle}\n      onEdit= {onEdit}\n      onEditOpen = {onEditOpen}\n      onEditClose = {onEditClose}\n      addNotification = {addNotification}\n    />\n    )    \n  })\n  \n  return todoItems\n}\n\nexport default TodosGroup;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as todoActions from \"store/modules/todo\";\nimport * as notificationActions from 'store/modules/notification';\n\nimport TodoGroup from 'components/Todo/TodoGroup';\n\nclass TodoGroupContainer extends Component {\n    handleEdit = (id)=>{\n        const {TodoActions} = this.props;\n        TodoActions.edit(id);\n    }\n\n    handleToggle = id => {\n        const { TodoActions } = this.props;\n        TodoActions.toggle(id);\n        TodoActions.changeInput(\"\");\n        TodoActions.changeContent(\"\");\n      };\n    \n    handleRemove = id => {\n        // 아이템 제거\n        const { TodoActions } = this.props;\n        TodoActions.remove(id);\n    };\n\n    handleEditOpen = () => {\n        const {TodoActions} = this.props;\n        TodoActions.todoEditModalOpen();\n    }\n\n    handleEditClose = (id) => {\n        const {TodoActions} = this.props;\n        TodoActions.todoEditModalClose(id);\n    }\n  \n  render() {\n    const { \n        handleToggle, handleRemove, handleEdit, handleTodoClose, handleTodoOpen,\n        handleEditOpen, handleEditClose\n    } = this;\n    const { todos, addNotification } = this.props;\n\n    return (\n        <TodoGroup  \n            todos={todos} \n            onToggle={handleToggle}\n            onRemove={handleRemove} \n            onEdit={handleEdit} \n            onTodoOpen={handleTodoOpen}\n            onTodoClose={handleTodoClose}\n            onEditOpen={handleEditOpen}\n            onEditClose={handleEditClose}\n            addNotification={addNotification}\n        />\n    );\n  }\n}\n\nexport default connect(\n  ({ todo}) => ({\n    todos: todo.get(\"todos\"),\n    editModalOpen : todo.get(\"editModalOpen\"),\n    data : todo.get('data')\n  }),\n  dispatch => ({\n    TodoActions: bindActionCreators(todoActions, dispatch),\n  })\n)(TodoGroupContainer);\n","import React, {Component} from 'react';\nimport DatePicker from 'react-date-picker';\n \nclass CalendarModal2 extends Component {\n  state = {\n    date: new Date(),\n  }\n \n  onChange = date => {\n    date ? this.props.onChangeDate(date) : this.props.onChangeDate(new Date());\n  }\n \n  render() {\n    const {date} = this.props;\n    return (\n        <DatePicker\n          minDate = {new Date()}\n          onChange={this.onChange}\n          value={date ? date : new Date()}\n        />\n    );\n  }\n}\n\nexport default CalendarModal2;","import React from 'react'\nimport { Dropdown, Input } from 'semantic-ui-react'\n\nconst tagOptions = [\n  {\n    key: '1',\n    text: '가장높음',\n    value: '1',\n    label: { color: 'red', empty: true, circular: true },\n  },\n  {\n    key: '2',\n    text: '높음',\n    value: '2',\n    label: { color: 'orange', empty: true, circular: true },\n  },\n  {\n    key: '3',\n    text: '보통',\n    value: '3',\n    label: { color: 'yellow', empty: true, circular: true },\n  },\n  {\n    key: '4',\n    text: '낮음',\n    value: '4',\n    label: { color: 'blue', empty: true, circular: true },\n  },\n  {\n    key: '5',\n    text: '가장 낮음',\n    value: '5',\n    label: { color: 'green', empty: true, circular: true },\n  },\n  {\n    key: '0',\n    text: '기본',\n    value: '0',\n    label: { color : 'grey', empty: true, circular: true },\n  }\n  \n]\n\nclass PriorityDropdown extends React.Component{\n\n    handleClick = (color) =>{\n      this.props.onOrderChange(color);\n    }\n    render(){\n      const {order, onOrderChange} = this.props;\n      return(\n        <Dropdown\n          text={order ? order.text : \"우선순위\"}\n          icon='filter'\n          floating\n          labeled\n          button\n          className='icon'\n          style={{'margin-left':'1em'}}\n        >\n      <Dropdown.Menu>\n          <Dropdown.Menu scrolling>\n            {tagOptions.map(option => (\n              <Dropdown.Item key={option.value} id={option.value} {...option} onClick={() => this.handleClick(option)} />\n            ))}\n          </Dropdown.Menu>\n        </Dropdown.Menu>\n      </Dropdown>\n      )\n    }\n}\n\nexport default PriorityDropdown;","import React from 'react';\nimport { } from 'immutable';\nimport {Form } from 'semantic-ui-react'\nconst TodosInput = ({onChange, onChangeContent, input, inputContent, editModalOpen }) => {\n  \n  return (\n    <Form>\n      <Form.Input fluid label='작업 이름' placeholder='작업 입력...'\n        name='title' id='title' onChange = {onChange} value={input}\n      />\n      <Form.TextArea label='내용' placeholder='내용 입력...' \n        name='content' id='content' onChange = {onChangeContent} value={inputContent}\n      />\n    </Form>\n  );\n};\n\nTodosInput.defaultProps = {\n  input: '',\n  inputContent : ''\n};\n\nexport default TodosInput;","import React from 'react'\nimport { Button, Modal, Divider } from 'semantic-ui-react'\n\nimport CalendarModal2 from './CalendarModal2';\nimport PriorityDropdown from 'components/PriorityDropdown/PriorityDropdown';\nimport TodosInput from 'components/Todo/TodosInput';\nclass TodosViewer extends React.Component {\n    handleSubmit = () => {\n        let value;\n        this.props.modalOpen ? this.props.onInsert() : this.props.onEdit();\n        this.props.modalOpen ? value = {type : \"success\", message : \"작업 등록 완료\", title : \"등록\"} \n        : value = {type : \"info\", message : \"작업 수정 완료\", title : \"수정\"}\n        this.props.onModalClose();\n        this.props.addNotification(value);\n    }\n\n    render(){\n        const {\n            onChange, onChangeContent, todos, modalOpen, onModalOpen, onOrderChange,\n            onModalClose, editModalOpen, onChangeDate, date, input, inputContent, order, \n            } = this.props;\n        return(   \n            \n            <Modal dimmer='blurring' open={editModalOpen||modalOpen} \n            closeIcon onClose={onModalClose} trigger={<Button icon='plus' \n            onClick={onModalOpen} style={{\"margin-top\" : \"1em\"}}/>} centered={false}\n            >\n                {\n                    modalOpen ? <Modal.Header>작업 등록</Modal.Header>\n                     : <Modal.Header>작업 수정</Modal.Header>\n                }\n                <Modal.Content image>            \n                    <Modal.Description>\n                        <TodosInput\n                            onChange={onChange}\n                            onChangeContent={onChangeContent}\n                            editModalOpen={editModalOpen}\n                            input={input}\n                            inputContent={inputContent}\n                        />\n                        <Divider/>\n                        <CalendarModal2 onChangeDate={onChangeDate} date={date}/>\n                        <PriorityDropdown\n                            order={order}\n                            onOrderChange={onOrderChange}\n                        />\n                    </Modal.Description>\n                </Modal.Content>\n                \n                <Modal.Actions>\n                    <Button color='black' onClick={onModalClose}>  \n                    취소\n                    </Button>\n                    <Button\n                    positive\n                    icon='checkmark'\n                    labelPosition='right'\n                    content=\"등록\"\n                    onClick={this.handleSubmit}\n                    />\n                </Modal.Actions>\n            </Modal>    \n        )\n    }\n}\n\nexport default TodosViewer;\n\n\n//","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as todoActions from \"store/modules/todo\";\n\nimport TodosViewer from 'components/TodoModal/TodosViewer';\n\nclass TodoViewerContainer extends Component {\n\n    handleChange = e => {\n        const { TodoActions } = this.props;\n        TodoActions.changeInput(e.target.value);\n    };\n    handleChangeContent = e => {\n        const {TodoActions} = this.props;\n        TodoActions.changeContent(e.target.value);\n    }\n    handleInsert = () => {\n        const {input, inputContent, date, order, TodoActions } = this.props;\n        const value = { input, inputContent, date, order};\n        TodoActions.insert(value);\n        TodoActions.changeInput(\"\");\n        TodoActions.changeContent(\"\");\n        TodoActions.changeDate(\"\");\n        TodoActions.todoOrderChange(\"\");\n    };\n    handleEdit = (id)=>{\n        const {TodoActions} = this.props;\n        TodoActions.edit(id);\n    }\n  \n    handleModalOpen = ()=> {\n      const {TodoActions} = this.props;\n      TodoActions.todoModalOpen();\n    }\n\n    handleModalClose = () =>{\n      const {TodoActions} = this.props;\n      TodoActions.todoEditModalClose();\n    }\n\n    handleChangeDate = (date) =>{\n      const {TodoActions} = this.props;\n      TodoActions.changeDate(date);\n    }\n    handleOrderChange = (color) => {\n      const {TodoActions} = this.props;\n      TodoActions.todoOrderChange(color);\n    }\n\n    \n  render() {\n    const {\n      handleChange, handleChangeContent, handleInsert,  handleEdit,\n      handleModalClose, handleModalOpen, handleChangeDate, handleOrderChange\n     } = this;\n    const {modalOpen, editModalOpen, date, input, inputContent, order, addNotification } = this.props;\n\n    return (\n        <TodosViewer\n            onChange = {handleChange}\n            onChangeContent = {handleChangeContent}\n            onInsert = {handleInsert}\n            onEdit = {handleEdit}\n            modalOpen = {modalOpen}\n            editModalOpen = {editModalOpen}\n            onModalOpen = {handleModalOpen}\n            onModalClose = {handleModalClose}\n            onChangeDate = {handleChangeDate}\n            date = {date}\n            input = {input}\n            inputContent = {inputContent}\n            onOrderChange = {handleOrderChange}\n            order={order}\n            addNotification={addNotification}\n        />\n    );\n  }\n}\n\nexport default connect(\n  ({ todo }) => ({\n    input: todo.get(\"input\"),\n    inputContent : todo.get('inputContent'),\n    date : todo.get('date'),\n    order : todo.get('order'),\n    todos: todo.get(\"todos\"),\n    modalOpen : todo.get(\"modalOpen\"),\n    editModalOpen : todo.get('editModalOpen')\n  }),\n  dispatch => ({\n    TodoActions: bindActionCreators(todoActions, dispatch)\n  })\n)(TodoViewerContainer);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as todoActions from \"store/modules/todo\";\nimport * as notificationActions from 'store/modules/notification';\nimport { Container, Header } from \"semantic-ui-react\";\n\nimport NotificationComponent from 'components/NotificationComponent/NotificationComponent';\nimport TodoGroupContainer from './TodoGroupContainer';\nimport TodoViewerContainer from './TodoViewerContainer';\n\n\nclass TodosContainer extends Component {\n\n  render() {\n\n    const { todos, addNotification } = this.props;\n    return (\n      <Container textAlign='center'>\n          <TodoGroupContainer addNotification={addNotification}/>\n          {todos.size ? \"\":<Header>버튼을 눌러 작업을 추가해 보세요!</Header>}\n          <TodoViewerContainer addNotification={addNotification}/>\n      </Container>\n    );\n  }\n}\n\nexport default connect(\n  ({ todo, notification }) => ({\n    todos: todo.get('todos'),\n    data : notification.get('data')\n  }),\n  dispatch => ({\n    TodoActions: bindActionCreators(todoActions, dispatch)\n  })\n)(TodosContainer);\n","import React, { Component } from 'react'\nimport { Menu, Segment, Sidebar } from 'semantic-ui-react'\n\nexport default class SidebarExampleDimmed extends Component {\n  state = { visible: false }\n\n  handleHideClick = () => this.setState({ visible: false })\n  handleShowClick = () => this.setState({ visible: true })\n  handleSidebarHide = () => this.setState({ visible: false })\n\n  render() {\n    const { children} = this.props;\n    const {visible} = this.state;\n\n    return (\n      <div>\n        <Sidebar.Pushable as={Segment}>\n          <Sidebar\n            as={Menu}\n            animation='overlay'\n            icon='labeled'\n            inverted\n            onHide={this.handleHideClick}\n            vertical\n            visible={visible}\n            width='thin'\n          >\n            <Menu.Item as='a'>Home</Menu.Item>\n          </Sidebar>\n\n          <Sidebar.Pusher dimmed={visible} onClick={this.handleSidebarHide}>\n            <Segment basic>\n                {children}\n            </Segment>\n          </Sidebar.Pusher>\n        </Sidebar.Pushable>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport {Menu, Container } from 'semantic-ui-react'\nimport Sidebar from './Sidebar';\nexport default class Menubar extends Component {\n  state = {\n    activeItem: 'home',\n    visible : false\n  }\n\n  handleItemClick = (e, { name }) => {\n    if(name === 'menu'){\n      return this.setState({ visible: !this.state.visible })\n    }\n  }\n\n  handleHideClick = () => this.setState({ visible: false })\n  \n  render() {\n    const { activeItem, visible, handleHideClick } = this.state\n    const { children } = this.props;\n\n    return (\n      <div>\n        <Sidebar  handleVisible={visible}>\n        <Menu secondary>\n          <Container>\n          <Menu.Item name='menu' active={activeItem === 'menu'} onClick={this.handleItemClick} />\n          <Menu.Menu position='right'>\n            <Menu.Item>\n              {/* <Input icon='search' placeholder='Search...' /> */}\n            </Menu.Item>\n            <Menu.Item\n              name='logout'\n              active={activeItem === 'logout'}\n              onClick={this.handleItemClick}\n            />\n          </Menu.Menu>\n          </Container>\n        </Menu>\n          {children}\n        </Sidebar>\n      </div>\n    )\n  }\n}","import React from 'react'\nimport {Segment, Container, List, Header, Grid, Divider} from 'semantic-ui-react';\nconst Footer = () => (\n    <Segment vertical style={{ margin: '5em 0em 0em', padding: '5em 0em' }}>\n      <Container textAlign='center'>\n        <Grid divided stackable>\n          <Grid.Column width={16}>\n            <Header as='h4' content='Footer Header' />\n            <p>\n              Extra space for a call to action inside the footer that could help re-engage users.\n            </p>\n          </Grid.Column>\n        </Grid>\n\n        <Divider section />\n        <List horizontal divided link size='small'>\n          <List.Item as='a' href='#'>\n            Site Map\n          </List.Item>\n          <List.Item as='a' href='#'>\n            Contact Us\n          </List.Item>\n          <List.Item as='a' href='#'>\n            Terms and Conditions\n          </List.Item>\n          <List.Item as='a' href='#'>\n            Privacy Policy\n          </List.Item>\n        </List>\n      </Container>\n    </Segment>\n);\n\nexport default Footer;","import React from \"react\";\nimport Menubar from \"./Menubar\";\nimport Footer from './Footer';\nimport { Container, Divider, Header } from 'semantic-ui-react'\n\nconst Layout = ({ children, todolist }) => (\n  <Menubar>\n    <Container style={{'height':\"80vh\"}}>\n    <Container textAlign='center'><Header>TODOLIST</Header></Container>\n    <Container textAlign='center'>{new Date().getMonth()+1+\"월\"+new Date().getDate()+\"일\"}</Container>\n    <Container textAlign='justified'>\n      <Divider />\n      {children}\n    </Container>\n    </Container>\n    <Footer/>\n  </Menubar>\n);\n\n\nexport default Layout;","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as todoActions from \"store/modules/todo\";\nimport * as notificationActions from 'store/modules/notification';\nimport ReactNotification from \"react-notifications-component\";\n\nimport TodoContainer from './container/TodoContainer';\nimport Layout from './components/Layout/Layout';\nclass App extends Component {\n\n    constructor(props) {\n      super(props);\n      this.addNotification = this.addNotification.bind(this);\n      this.notificationDOMRef = React.createRef();\n    }\n  \n    addNotification(value) {\n      this.notificationDOMRef.current.addNotification({\n        title: value.title,\n        message: value.message,\n        type: value.type,\n        insert: \"top\",\n        container: \"top-right\",\n        animationIn: [\"animated\", \"jackInTheBox\"],\n        animationOut: [\"animated\", \"fadeOut\"],\n        dismiss: { duration: 3000 },\n        dismissable: { click: true }\n      });\n    }\n    handleShowNotification = (value) =>{\n      const {NotificationActions} = this.props;\n      NotificationActions.showNotification(value);\n      this.addNotification(value);\n    }\n\n    // componentDidMount() {\n    //     fetch('/api/getUsername')\n    //         .then(res => res.json())\n    //         .then(user => this.setState({ username: user.username }));\n    // }\n\n  render() {\n    const {addNotification, handleShowNotification} = this;\n    return (\n      <Layout>\n          <ReactNotification ref={this.notificationDOMRef}/>\n          <TodoContainer \n            addNotification={handleShowNotification}\n          />\n      </Layout>\n    );\n  }\n}\n\nexport default connect(\n  ({ todo, notification }) => ({\n    todos: todo.get('todos'),\n    data : notification.get('data')\n  }),\n  dispatch => ({\n    TodoActions: bindActionCreators(todoActions, dispatch),\n    NotificationActions : bindActionCreators(notificationActions, dispatch)\n  })\n)(App);\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {combineReducers} from 'redux';\nimport {penderReducer} from 'redux-pender';\nimport todo from './todo';\nimport notification from './notification';\n\nexport default combineReducers({\n    todo,\n    notification,\n    pender : penderReducer\n});","import { createStore, applyMiddleware, compose} from 'redux';\n\nimport penderMiddleware from 'redux-pender';\nimport logger from 'redux-logger';\nimport reducers from './modules';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducers, composeEnhancers(\n    applyMiddleware(logger,penderMiddleware())\n));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport store from './store/store';\n\n//semantic-ui-react\nimport 'semantic-ui-css/semantic.min.css'\n\nimport \"../node_modules/react-notifications-component/dist/theme.css\"\nimport 'lib/animate.css';\n//router\n// import { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    \n    <Provider store = {store}>\n        <App />\n    </Provider>\n    ,\n     document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}